<div class="container mt-4">
    <a href="/products" class="btn btn-secondary mb-3">
        <i class="fas fa-arrow-left"></i> Volver al inicio
    </a>
    <div id="product-details" class="row"></div>
</div>

<div id="cart-summary" class="position-fixed top-0 end-0 bg-light p-3 shadow" style="display: none;">
    <h4>Resumen del Carrito</h4>
    <div id="cart-items"></div>
    <p id="cart-total" class="mt-3 fw-bold"></p>
    <button onclick="cerrarResumenCarrito()" class="btn btn-danger btn-sm mt-2">Cerrar</button>
    <a href="/payments" class="btn btn-primary btn-sm mt-2">Ver carrito completo</a>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let carrito = [];

    document.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        const productId = urlParams.get('id');

        const producto = obtenerProductoPorId(productId);
        const productosRelacionados = obtenerProductosRelacionados(producto.categoria, productId);

        const detalleContainer = document.getElementById('product-details');
        detalleContainer.innerHTML = `
                <div class="col-md-6">
                    <img src="${producto.imagenes[0].url}" alt="${producto.nombre}" class="img-fluid rounded product-image-detail mb-3" id="product-image">
                    <div class="d-flex justify-content-start flex-wrap gap-2 mb-3">
                        ${producto.imagenes.map((imagen, index) => `
                            <img src="${imagen.url}" alt="${imagen.descripcion}" class="thumbnail-image ${index === 0 ? 'active' : ''}" onclick="cambiarImagen(${index})">
                        `).join('')}
                    </div>
                    <div id="image-info" class="mt-3"></div>
                </div>
                <div class="col-md-6">
                    <h1 class="mb-3">${producto.nombre}</h1>
                    <p class="lead">${producto.descripcionCorta}</p>
                    <p><strong>Marca:</strong> ${producto.marca}</p>
                    <p><strong>Categoría:</strong> ${producto.categoria}</p>
                    <p><strong>Precio:</strong> $${producto.precio.toFixed(2)}</p>
                    <p><strong>Disponibilidad:</strong> ${producto.disponibilidad ? 'En stock' : 'Agotado'}</p>
                    ${producto.disponibilidad ? `
                        <div class="mb-3">
                            <label for="cantidad" class="form-label">Cantidad:</label>
                            <input type="number" id="cantidad" class="form-control" value="1" min="1" max="10">
                        </div>
                        <button onclick="agregarAlCarrito(${producto.id})" class="btn btn-primary btn-lg mb-3">Agregar al carrito</button>
                    ` : '<p class="text-danger">Producto temporalmente agotado</p>'}
                    <h3 class="mt-4">Características principales</h3>
                    <ul class="list-unstyled">
                        ${producto.caracteristicas.map(c => `
                            <li><i class="fas fa-check feature-icon"></i>${c}</li>
                        `).join('')}
                    </ul>
                </div>
                <div class="col-12 mt-5">
                    <h2>Descripción detallada</h2>
                    <p>${producto.descripcionLarga}</p>
                </div>
                <div class="col-12 mt-4">
                    <h3>Beneficios</h3>
                    <ul>
                        ${producto.beneficios.map(b => `<li>${b}</li>`).join('')}
                    </ul>
                </div>
                <div class="col-12 mt-4">
                    <h3>Especificaciones técnicas</h3>
                    <table class="table table-striped">
                        <tbody>
                            ${Object.entries(producto.especificaciones).map(([key, value]) => `
                                <tr>
                                    <th>${key}</th>
                                    <td>${value}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
                <div class="col-12 mt-4">
                    <h3>Instrucciones de uso</h3>
                    <ol>
                        ${producto.instrucciones.map(i => `<li>${i}</li>`).join('')}
                    </ol>
                </div>
                <div class="col-12 mt-5">
                    <h2>Productos relacionados</h2>
                    <div class="row">
                        ${productosRelacionados.map(p => `
                            <div class="col-md-3 mb-4">
                                <div class="card h-100">
                                    <img src="${p.imagen}" alt="${p.nombre}" class="card-img-top related-product-image">
                                    <div class="card-body">
                                        <h5 class="card-title">${p.nombre}</h5>
                                        <p class="card-text">$${p.precio.toFixed(2)}</p>
                                        <a href="producto.html?id=${p.id}" class="btn btn-outline-primary btn-sm">Ver detalle</a>
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            `;

        cargarCarritoDesdeLocalStorage();
        actualizarResumenCarrito();

        document.getElementById('cart-btn').addEventListener('click', function (e) {
            e.preventDefault();
            const cartSummary = document.getElementById('cart-summary');
            cartSummary.style.display = cartSummary.style.display === 'none' ? 'block' : 'none';
        });

        // Mostrar la información de la primera imagen
        cambiarImagen(0);
    });

    function obtenerProductoPorId(id) {
        // Simulamos la obtención del producto. En una aplicación real, esto vendría de una API o base de datos.
        return {
            id: parseInt(id),
            nombre: "Proteína en polvo Premium",
            descripcionCorta: "Fórmula avanzada para el desarrollo muscular y recuperación rápida.",
            marca: "NutriPro",
            categoria: "Suplementos Nutricionales",
            precio: 59.99,
            disponibilidad: true,
            imagenes: [
                {
                    url: "https://media.revistagq.com/photos/652e44ae0c7c0268f3e12874/3:4/w_748%2Cc_limit/Caseina.jpg",
                    descripcion: "Imagen principal del producto: Muestra el envase de la proteína en polvo Premium."
                },
                {
                    url: "https://www.gastrolabweb.com/u/fotografias/m/2021/4/5/f768x400-11191_55094_5050.jpg",
                    descripcion: "Imagen de uso: Demuestra cómo consumir la proteína en forma de batido después del entrenamiento."
                },
                {
                    url: "https://www.heavenimagenes.com/heavencommerce/68ac9d04-8767-4aca-9951-49f2fea1383b/images/v2/STAR%20NUTRITION/28705_medium.jpg",
                    descripcion: "Imagen de detalle: Muestra la información nutricional y los ingredientes del producto."
                },
                {
                    url: "https://www.etprotein.com/wp-content/uploads/2024/01/d1abe37b25f7b4fa8fd35cdb4fa63899-1024x585.png",
                    descripcion: "Imagen de variedad: Muestra diferentes sabores disponibles de la proteína en polvo."
                }
            ],
            caracteristicas: [
                "25g de proteína por porción",
                "Bajo en carbohidratos y grasas",
                "Contiene BCAA y glutamina",
                "Sabor delicioso",
                "Fácil disolución"
            ],
            descripcionLarga: "Nuestra proteína en polvo Premium está diseñada para atletas y entusiastas del fitness que buscan maximizar sus resultados. Con una mezcla única de proteínas de suero, caseína y proteína de huevo, proporciona una liberación sostenida de aminoácidos para apoyar el crecimiento muscular y la recuperación. Su fórmula avanzada incluye enzimas digestivas para una mejor absorción y utilización de los nutrientes.",
            beneficios: [
                "Promueve el crecimiento y la reparación muscular",
                "Ayuda en la recuperación post-entrenamiento",
                "Contribuye al mantenimiento de la masa muscular",
                "Puede ayudar a controlar el apetito",
                "Versátil para usar en batidos, hornear o agregar a alimentos"
            ],
            especificaciones: {
                "Tamaño de la porción": "30g",
                "Porciones por envase": "30",
                "Proteína por porción": "25g",
                "Carbohidratos por porción": "2g",
                "Grasas por porción": "1g",
                "Calorías por porción": "120",
                "Sabores disponibles": "Chocolate, Vainilla, Fresa, Cookies & Cream"
            },
            instrucciones: [
                "Mezclar 1 cucharada (30g) con 250ml de agua fría o leche.",
                "Agitar bien en un shaker o mezclar en una licuadora por 20-30 segundos.",
                "Consumir inmediatamente después de la preparación.",
                "Para mejores resultados, tomar 1-2 porciones al día, incluyendo una después del entrenamiento.",
                "Conservar en un lugar fresco y seco, lejos de la luz directa del sol."
            ]
        };
    }

    function obtenerProductosRelacionados(categoria, idActual) {
        // Simulamos la obtención de productos relacionados
        return [
            { id: 2, nombre: "BCAA en cápsulas", precio: 29.99, imagen: "https://www.vitaminshoppeparaguay.com.py/cdn/shop/products/bcaa-1000-200-capsulas_e87768cc-bcd5-49f1-a6f4-45e754e9a500.jpg?v=1597767506" },
            { id: 3, nombre: "Creatina Monohidrato", precio: 24.99, imagen: "https://i0.wp.com/nibray.pe/wp-content/uploads/2023/08/Creatina-Micronizada-Optimum-Nutrition-1.png?fit=600%2C600&ssl=1" },
            { id: 4, nombre: "Multivitamínico para atletas", precio: 19.99, imagen: "https://www.energynutritionlp.com/cdn/shop/files/life-pro-vitamin-b12-90-vegancaps.jpg?v=1689754587&width=370%20370w" }
        ];
    }

    function agregarAlCarrito(id) {
        const producto = obtenerProductoPorId(id);
        const cantidad = parseInt(document.getElementById('cantidad').value);
        const itemEnCarrito = carrito.find(item => item.id === id);
        if (itemEnCarrito) {
            itemEnCarrito.cantidad += cantidad;
        } else {
            carrito.push({ ...producto, cantidad: cantidad });
        }
        guardarCarritoEnLocalStorage();
        actualizarResumenCarrito();
    }

    function actualizarResumenCarrito() {
        const cartItems = document.getElementById('cart-items');
        const cartTotal = document.getElementById('cart-total');
        const cartCount = document.getElementById('cart-count');
        let total = 0;

        cartItems.innerHTML = '';

        carrito.forEach(item => {
            const itemElement = document.createElement('div');
            itemElement.className = 'mb-3';
            itemElement.innerHTML = `
                    <div class="d-flex justify-content-between align-items-center">
                        <span>${item.nombre} - $${item.precio}</span>
                        <div>
                            <input type="number" value="${item.cantidad}" min="1" onchange="actualizarCantidad(${item.id}, this.value)" class="form-control form-control-sm d-inline-block" style="width: 60px;">
                            <button onclick="quitarDelCarrito(${item.id})" class="btn btn-danger btn-sm ms-2">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                `;
            cartItems.appendChild(itemElement);
            total += item.precio * item.cantidad;
        });

        cartTotal.textContent = `Total: $${total.toFixed(2)}`;
        cartCount.textContent = carrito.reduce((sum, item) => sum + item.cantidad, 0);
    }

    function actualizarCantidad(id, nuevaCantidad) {
        const item = carrito.find(item => item.id === id);
        if (item) {
            item.cantidad = parseInt(nuevaCantidad);
            guardarCarritoEnLocalStorage();
            actualizarResumenCarrito();
        }
    }

    function quitarDelCarrito(id) {
        carrito = carrito.filter(item => item.id !== id);
        guardarCarritoEnLocalStorage();
        actualizarResumenCarrito();
    }

    function cerrarResumenCarrito() {
        document.getElementById('cart-summary').style.display = 'none';
    }

    function cambiarImagen(index) {
        const producto = obtenerProductoPorId(1); // Asumimos que estamos viendo el producto con ID 1
        const imagenPrincipal = document.getElementById('product-image');
        const imageInfo = document.getElementById('image-info');
        const thumbnails = document.querySelectorAll('.thumbnail-image');

        imagenPrincipal.src = producto.imagenes[index].url;
        imageInfo.innerHTML = `<p>${producto.imagenes[index].descripcion}</p>`;

        thumbnails.forEach((thumb, i) => {
            if (i === index) {
                thumb.classList.add('active');
            } else {
                thumb.classList.remove('active');
            }
        });
    }

    function guardarCarritoEnLocalStorage() {
        localStorage.setItem('carrito', JSON.stringify(carrito));
    }

    function cargarCarritoDesdeLocalStorage() {
        const carritoGuardado = localStorage.getItem('carrito');
        if (carritoGuardado) {
            carrito = JSON.parse(carritoGuardado);
        }
    }
</script>